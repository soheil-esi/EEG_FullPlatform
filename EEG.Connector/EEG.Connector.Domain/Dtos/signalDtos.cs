// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.10.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace EEG.Connector.Domain.Dtos
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;

	public partial class signalDtos : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"signalDtos\",\"namespace\":\"EEG.Connector.Domain.Dtos\",\"fie" +
				"lds\":[{\"name\":\"data\",\"type\":{\"type\":\"map\",\"values\":\"double\"}}]}");
		private IDictionary<string, System.Double> _data;
		public virtual Schema Schema
		{
			get
			{
				return signalDtos._SCHEMA;
			}
		}
		public IDictionary<string, System.Double> data
		{
			get
			{
				return this._data;
			}
			set
			{
				this._data = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
				case 0: return this.data;
				default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
				case 0: this.data = (IDictionary<string, System.Double>)fieldValue; break;
				default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
