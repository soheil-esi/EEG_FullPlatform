version: "3.9"

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper-server:
    image: bitnami/zookeeper:latest
    networks:
      - kafka-net
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafdrop:
    image: obsidiandynamics/kafdrop
    networks:
      - kafka-net
    restart: "no"
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: PLAINTEXT://kafkaserver:29092
      JVM_OPTS: -Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify
      SCHEMAREGISTRY_CONNECT: http://schemaregistry:8081
    depends_on:
      - kafkaserver
  kafkaserver:
    image: bitnami/kafka:latest
    networks:
      - kafka-net
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafkaserver:29092,PLAINTEXT_HOST://127.0.0.1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server
  schemaregistry:
    image: confluentinc/cp-schema-registry:latest
    networks:
      - kafka-net
    ports:
      - 8081:8081
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafkaserver:29092
      - SCHEMA_REGISTRY_HOST_NAME=localhost
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
    depends_on:
      - kafkaserver
  influxdb1:
    networks:
        - kafka-net
    image: influxdb:2.0.7
    volumes:
      # Mount for influxdb data directory and configuration
      - /Users/anaisdotis-georgiou/temp/influxdbv2:/var/lib/influxdb21:rw
      - ./ssl/influxdb-selfsigned.crt:/etc/ssl/influxdb-selfsigned.crt:rw
      - ./ssl/influxdb-selfsigned.key:/etc/ssl/influxdb-selfsigned.key:rw
    environment: 
      - INFLUXDB_DB=eeg
      - INFLUXDB_ADMIN_USER=sa
      - INFLUXDB_ADMIN_PASSWORD=Aranuma@123
    ports:
      - "8087:8086"
    restart: on-failure:10
  influxdb2:
    networks:
        - kafka-net
    image: influxdb:2.0.7
    volumes:
      # Mount for influxdb data directory and configuration
      - /Users/anaisdotis-georgiou/temp/influxdbv2:/var/lib/influxdb22:rw
      - ./ssl/influxdb-selfsigned.crt:/etc/ssl/influxdb-selfsigned.crt:rw
      - ./ssl/influxdb-selfsigned.key:/etc/ssl/influxdb-selfsigned.key:rw
    environment: 
      - INFLUXDB_DB=eeg
      - INFLUXDB_ADMIN_USER=sa
      - INFLUXDB_ADMIN_PASSWORD=Aranuma@123
    ports:
      - "8088:8086"
    restart: on-failure:10
  grafana:
    networks:
        - kafka-net
    image: grafana/grafana:latest
    ports:
      - '3050:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb1
      - influxdb2
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
  archive:
    networks:
      - kafka-net
    build:
        context: ./EEG.Archive
        dockerfile: Dockerfile
    volumes:
      - .:/archive
    ports:
      - "5020:5000"
    depends_on:
      - kafkaserver
      - schemaregistry
  connector:
    networks:
      - kafka-net
    build:
        context: ./EEG.Connector
        dockerfile: Dockerfile
    volumes:
      - .:/connector
    ports:
      - "5010:5000"
    depends_on:
      - kafkaserver
      - schemaregistry
  proxysocket:
      networks:
        - kafka-net
      build:
          context: ./EEG.ProxySocket
          dockerfile: Dockerfile
      volumes:
        - .:/proxysocket
      ports:
        - "5000:5000"
      depends_on:
        - kafkaserver
        - schemaregistry
volumes:
  influxdb-storage:
  grafana-storage: